if game:GetService("CoreGui"):FindFirstChild("PCR_1") then
	game:GetService("CoreGui"):FindFirstChild("PCR_1"):Destroy()
	game:GetService("CoreGui").hookAnnouce:Destroy()
	workspace.xdwhatdot:Destroy()
end
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/345cc/hook/main/4cc", true))()
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")

--Properties:

ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.Name = "hookAnnouce"
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0, 0, -0.011029412, 0)
Frame.Size = UDim2.new(1, 0, 0.894607842, 0)
UIListLayout.Parent = Frame
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom

-- library

local Legit = library:AddWindow('AimLock')
local Visual = library:AddWindow('Visual')
local Anti_Aim = library:AddWindow('Anti-Aim')

-- Configs

local Config = {
	SilentAim = {
		Enabled = false,
		Prediction = true,
		Resolver = false,
		PredictionValue = 1,
		AutoPrediction = false,
		AutoFire = false,
		AutoReload = false,
		WallCheck = false,
		KnockCheck = false,
		GotoTarget = false,
		Lookat = false,
	},
	AntiAim = {
		Enabled = false,
		AAType = "Sky"
	}
}


-- Varbs

local Rs = game:GetService("RunService")
local CC = game:GetService"Workspace".CurrentCamera
local Plr
local mouse = game.Players.LocalPlayer:GetMouse()
local e = Legit:AddSection('Silent Aim')
local anti = Anti_Aim:AddSection('Anti Lock')
local Players = game:GetService("Players")
local me = Players.LocalPlayer
local oldpos

-- important


local placemarker = Instance.new("Part", game.Workspace)
placemarker.Name = "xdwhatdot"
function makemarker(Parent, Adornee, Color, Size, Size2)
	local e = Instance.new("BillboardGui", Parent)
	e.Name = "PP"
	e.Adornee = Adornee
	e.Size = UDim2.new(Size, Size2, Size, Size2)
	e.AlwaysOnTop = true
	local a = Instance.new("Frame", e)
	a.Size = UDim2.new(1, 1, 1, 1)
	a.Transparency = 0
	a.BackgroundTransparency = 0
	a.BackgroundColor3 = Color
	local g = Instance.new("UICorner", a)
	g.CornerRadius = UDim.new(1, 1)
end

spawn(function()
	placemarker.Anchored = true
	placemarker.CanCollide = false
	placemarker.Size = Vector3.new(0, 0, 0)
	placemarker.Transparency = 0.75
	makemarker(placemarker, placemarker, Color3.fromRGB(255, 255, 255), 1, 0)
end)

mouse.KeyDown:Connect(function(k)
	if k ~= "q" then return end
	if Config.SilentAim.Enabled then
		spawn(function()
			annouce("Unlocked", "Lock")
		end)
		Config.SilentAim.Enabled = false
	else
		spawn(function()
			annouce("Locked into target", "Lock")
		end)
		Plr = getClosestPlayerToCursor()
		Config.SilentAim.Enabled = true
	end    
end)

function getClosestPlayerToCursor()
	local closestPlayer
	local shortestDistance = math.huge

	for i, v in pairs(game.Players:GetPlayers()) do
		if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and v.Character.Humanoid.Health ~= 0 and v.Character:FindFirstChild("LowerTorso") then
			local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
			local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(mouse.X, mouse.Y)).magnitude
			if magnitude < shortestDistance then
				closestPlayer = v
				shortestDistance = magnitude
			end
		end
	end
	return closestPlayer
end
game:GetService"RunService".Stepped:connect(function()
	if Config.SilentAim.Enabled and Plr.Character ~= nil and Plr.Character:FindFirstChild("HumanoidRootPart") then
		if Config.SilentAim.Prediction == true then
			placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position+(Plr.Character.HumanoidRootPart.Velocity*Config.SilentAim.PredictionValue))
			if Config.SilentAim.GotoTarget == true then
				oldpos = me.Character:FindFirstChildOfClass("Humanoid").RootPart.CFrame
				me.Character:FindFirstChildOfClass("Humanoid").RootPart.CFrame = Plr.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(math.random(-10,10),math.random(0,2),math.random(-10,10))
			else
			end	
		else
			placemarker.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position)
		end
	else
		placemarker.CFrame = CFrame.new(0, 9999, 0)
	end
end)
local DesyncTypes = {}

function RandomNumberRange(a)
	return math.random(-a * 100, a * 100) / 100
end
game:GetService"RunService".Heartbeat:connect(function()
	if Config.AntiAim.Enabled then
		if Config.AntiAim.AAType == "Sky" then
			DesyncTypes[1] = me.Character.HumanoidRootPart.CFrame
			DesyncTypes[2] = me.Character.HumanoidRootPart.AssemblyLinearVelocity

			local SpoofThis = me.Character.HumanoidRootPart.CFrame

			SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
			SpoofThis = SpoofThis * CFrame.Angles(0,0,0)

			me.Character.HumanoidRootPart.CFrame = SpoofThis

			me.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0,500,0)

			Rs.RenderStepped:Wait()

			me.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
			me.Character.HumanoidRootPart.AssemblyLinearVelocity = DesyncTypes[2]
		elseif Config.AntiAim.AAType == "Underground" then
			DesyncTypes[1] = me.Character.HumanoidRootPart.CFrame
			DesyncTypes[2] = me.Character.HumanoidRootPart.AssemblyLinearVelocity

			local SpoofThis = me.Character.HumanoidRootPart.CFrame

			SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
			SpoofThis = SpoofThis * CFrame.Angles(0,0,0)

			me.Character.HumanoidRootPart.CFrame = SpoofThis

			me.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0,-500,0)

			Rs.RenderStepped:Wait()

			me.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
			me.Character.HumanoidRootPart.AssemblyLinearVelocity = DesyncTypes[2]
		elseif Config.AntiAim.AAType == "Prediction Breaker" then
			DesyncTypes[1] = me.Character.HumanoidRootPart.CFrame
			DesyncTypes[2] = me.Character.HumanoidRootPart.AssemblyLinearVelocity

			local SpoofThis = me.Character.HumanoidRootPart.CFrame

			SpoofThis = SpoofThis * CFrame.new(Vector3.new(0, 0, 0))
			SpoofThis = SpoofThis * CFrame.Angles(0,0,0)

			me.Character.HumanoidRootPart.CFrame = SpoofThis

			me.Character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0,0,0)

			Rs.RenderStepped:Wait()

			me.Character.HumanoidRootPart.CFrame = DesyncTypes[1]
			me.Character.HumanoidRootPart.AssemblyLinearVelocity = DesyncTypes[2]
	
		end
	else

	end
end)



-- functions

function annouce(msg, Type)
	local TextLabel = Instance.new("TextLabel")
	TextLabel.Parent = Frame
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(0.0455717966, 0, 0.976712346, 0)
	TextLabel.Size = UDim2.new(0, 1110, 0, 17)
	TextLabel.Font = Enum.Font.SourceSans
	TextLabel.Text = "hook.lol | "..Type.." | "..msg
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 14.000
	TextLabel.TextTransparency = 1
	TextLabel.TextStrokeTransparency = 1
	for i = 1,50 do
		TextLabel.TextTransparency = TextLabel.TextTransparency -  0.05
		TextLabel.TextStrokeTransparency = TextLabel.TextStrokeTransparency - 0.05
		game:GetService("RunService").Heartbeat:Wait()
	end
	wait(0.7)
	for i = 1,50 do
		TextLabel.TextTransparency = TextLabel.TextTransparency +  0.05
		TextLabel.TextStrokeTransparency = TextLabel.TextStrokeTransparency + 0.05
		game:GetService("RunService").Heartbeat:Wait()
	end
end

annouce("test", "Annouce")
-- a button that when you click will print 'a'
local visible = true

e:AddToggle('Prediction',false,nil, function(v)
	Config.SilentAim.Prediction =  v
end)


e:AddToggle('AutoPrediction',true,nil, function(v)
	Config.SilentAim.AutoPrediction = v
end)

e:AddToggle('Resolver',true,nil, function(v)
	Config.SilentAim.Resolver = v
end)



e:AddTextBox('PredictionValue',nil,false,0,function(a) Config.SilentAim.PredictionValue = a end)


e:AddToggle('Auto Fire',true,nil, function(v)
	Config.SilentAim.AutoFire = v
end)

e:AddToggle('Auto Reload',true,nil, function(v)
	Config.SilentAim.AutoReload = v
end)

e:AddToggle('Wall Check',true,nil, function(v)
	Config.SilentAim.WallCheck = v
end)

e:AddToggle('Knock Check',true,nil, function(v)
	Config.SilentAim.KnockCheck = v
end)

e:AddToggle('Goto Target',true,nil, function(v)
	Config.SilentAim.GotoTarget = v
end)

anti:AddToggle('Enabled',true,nil, function(v)
	Config.AntiAim.Enabled = v
end)

anti:AddDropdown('Desync Type',{'Sky','Underground','Prediction Breaker', 'Walkable Desync'},'Sky',function(a) Config.AntiAim.AAType = a end)


local ms = library.ms or 'hehe wha'

spawn(function()
	while wait(1) do
		local fps = library.fps
		local t = ''
		if #fps < 2 then
			t = 'FPS: '..'0'..fps..'| MS: '..ms
		else
			t = 'FPS: '..fps..'| MS: '..ms
		end
	end
end)


wait(4)



wait(2)
